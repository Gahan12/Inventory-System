{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Decentralized_Inventory_Management\\\\Frontend\\\\src\\\\Components\\\\AllRequests.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllRequests = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 text-gray-800 rounded-lg p-6 shadow-md\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-auto w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 7,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 8,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 9\n      }, this), props.flag ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.productRequests.map((val, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"verification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.adminRequests.map((val, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: val.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              try {\n                await fetch(\"http://localhost:5000/signUp\", {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    name: val.name,\n                    email: val.email,\n                    password: val.password,\n                    role: val.role\n                  }),\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                });\n              } catch (error) {\n                console.error(\"Error:\", error);\n              }\n              try {\n                await fetch(`http://localhost:5000/adminRequest/${val._id}`, {\n                  method: \"DELETE\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                });\n              } catch (error) {\n                console.error(\"Error:\", error);\n              }\n            },\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              try {\n                await fetch(`http://localhost:5000/adminRequest/${val._id}`, {\n                  method: \"DELETE\"\n                });\n              } catch (error) {\n                console.error(\"Error:\", error);\n              }\n            },\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n};\n_c = AllRequests;\nexport default AllRequests;\nvar _c;\n$RefreshReg$(_c, \"AllRequests\");","map":{"version":3,"names":["AllRequests","props","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","flag","productRequests","map","val","key","name","quantity","adminRequests","email","onClick","fetch","method","body","JSON","stringify","password","role","headers","error","console","_id","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/Decentralized_Inventory_Management/Frontend/src/Components/AllRequests.js"],"sourcesContent":["const AllRequests = (props) => {\r\n  return (\r\n    <div className=\"bg-gray-100 text-gray-800 rounded-lg p-6 shadow-md\">\r\n      <table className=\"table-auto w-full\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"px-4 py-2\">#</th>\r\n            <th className=\"px-4 py-2\">Name</th>\r\n            <th className=\"px-4 py-2\">Email</th>\r\n            <th className=\"px-4 py-2\">Action</th>\r\n          </tr>\r\n        </thead>\r\n      {props.flag ? (\r\n        <tbody>\r\n          {props.productRequests.map((val, key) => (\r\n            <tr>\r\n              <td>{val.name}</td>\r\n              <td>{val.quantity}</td>\r\n              <button>verification</button>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      ) : (\r\n        <tbody>\r\n          {props.adminRequests.map((val, key) => (\r\n            <tr>\r\n              <td>{val.name}</td>\r\n              <div>{val.email}</div>\r\n              <button\r\n                onClick={async () => {\r\n                  try {\r\n                    await fetch(\"http://localhost:5000/signUp\", {\r\n                      method: \"POST\",\r\n                      body: JSON.stringify({\r\n                        name: val.name,\r\n                        email: val.email,\r\n                        password: val.password,\r\n                        role: val.role,\r\n                      }),\r\n                      headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                      },\r\n                    });\r\n                  } catch (error) {\r\n                    console.error(\"Error:\", error);\r\n                  }\r\n                  try {\r\n                    await fetch(\r\n                      `http://localhost:5000/adminRequest/${val._id}`,\r\n                      {\r\n                        method: \"DELETE\",\r\n                        headers: {\r\n                          \"Content-Type\": \"application/json\",\r\n                        },\r\n                      }\r\n                    );\r\n                  } catch (error) {\r\n                    console.error(\"Error:\", error);\r\n                  }\r\n                }}\r\n              >\r\n                Confirm\r\n              </button>\r\n              <button\r\n                onClick={async () => {\r\n                  try {\r\n                    await fetch(\r\n                      `http://localhost:5000/adminRequest/${val._id}`,\r\n                      {\r\n                        method: \"DELETE\",\r\n                      }\r\n                    );\r\n                  } catch (error) {\r\n                    console.error(\"Error:\", error);\r\n                  }\r\n                }}\r\n              >\r\n                Reject\r\n              </button>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n          )}\r\n        </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllRequests;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}